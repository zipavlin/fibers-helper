(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{199:function(t,e,r){"use strict";r.r(e);var a=r(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"template-helper"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#template-helper","aria-hidden":"true"}},[t._v("#")]),t._v(" Template Helper")]),t._v(" "),r("p",[t._v("This helper is used to build file templates from string "),r("code",[t._v("TemplateHelper::fromString()")]),t._v(" or from a stub file "),r("code",[t._v("TemplateHelper::fromFile()")]),t._v(".")]),t._v(" "),r("div",{staticClass:"tip custom-block"},[r("p",[t._v('Template Helper is "macroable", which allows you to add additional methods to the TemplateHelper class at run time.')])]),t._v(" "),r("h2",{attrs:{id:"construct-from-file"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#construct-from-file","aria-hidden":"true"}},[t._v("#")]),t._v(" Construct from File")]),t._v(" "),r("helper-method",{attrs:{method:"fromFile"}},[r("pre",[r("code",[t._v("/**\n * Load template from file\n * @param string $filename\n * @return Template\n * @throws \\Exception\n */\n")])])]),t._v(" "),r("h2",{attrs:{id:"construct-from-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#construct-from-string","aria-hidden":"true"}},[t._v("#")]),t._v(" Construct from String")]),t._v(" "),r("helper-method",{attrs:{method:"fromString"}},[r("pre",[r("code",[t._v("/**\n * Load template from string\n * @param string $string\n * @return Template\n */\n")])])]),t._v(" "),r("h2",{attrs:{id:"replace"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#replace","aria-hidden":"true"}},[t._v("#")]),t._v(" Replace")]),t._v(" "),r("helper-method",{attrs:{method:"replace"}},[r("pre",[r("code",[t._v('/**\n * Does the actual string replacing\n * Expected input it keyed array of changes ("name:modifier" => content).\n * It supports some content modifiers like: list, array and string.\n * @param array $changes: keyed array, which supports modifiers\n * @return Template\n * @throws \\Exception\n */\n')])])]),t._v(" "),r("h2",{attrs:{id:"build-to-file"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#build-to-file","aria-hidden":"true"}},[t._v("#")]),t._v(" Build to File")]),t._v(" "),r("helper-method",{attrs:{method:"toFile"}},[r("pre",[r("code",[t._v("/**\n * Write template output to file\n * @param string $filepath\n * @return string\n * @throws \\Exception\n */\n")])])]),t._v(" "),r("h2",{attrs:{id:"build-to-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#build-to-string","aria-hidden":"true"}},[t._v("#")]),t._v(" Build to String")]),t._v(" "),r("helper-method",{attrs:{method:"toString"}},[r("pre",[r("code",[t._v("/**\n * Output template\n * @return string\n * @throws \\Exception\n */\n")])])]),t._v(" "),r("h2",{attrs:{id:"list"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#list","aria-hidden":"true"}},[t._v("#")]),t._v(" List")]),t._v(" "),r("helper-method",{attrs:{method:"list"}},[r("pre",[r("code",[t._v("/**\n * Build an list string from an array or Collection\n * @param array|Collection $value\n * @return string\n */\n")])])]),t._v(" "),r("h2",{attrs:{id:"array"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#array","aria-hidden":"true"}},[t._v("#")]),t._v(" Array")]),t._v(" "),r("helper-method",{attrs:{method:"array"}},[r("pre",[r("code",[t._v("/**\n * Build an array string from an array or Collection\n * @param array|Collection $value\n * @return string\n */\n")])])]),t._v(" "),r("h2",{attrs:{id:"string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string","aria-hidden":"true"}},[t._v("#")]),t._v(" String")]),t._v(" "),r("helper-method",{attrs:{method:"string"}},[r("pre",[r("code",[t._v("/**\n * Build an escaped string\n * @param string $value\n * @return string\n */\n")])])]),t._v(" "),r("h2",{attrs:{id:"integer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#integer","aria-hidden":"true"}},[t._v("#")]),t._v(" Integer")]),t._v(" "),r("helper-method",{attrs:{method:"integer"}},[r("pre",[r("code",[t._v("/**\n * Build an integer from value\n * @param int|string $value\n * @return int\n */\n")])])])],1)},[],!1,null,null,null);e.default=n.exports}}]);