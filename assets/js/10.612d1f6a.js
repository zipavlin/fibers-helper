(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{197:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"model-helper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#model-helper","aria-hidden":"true"}},[e._v("#")]),e._v(" Model Helper")]),e._v(" "),a("p",[e._v("This helper will provide information about specific model, which can be loaded from full classname "),a("code",[e._v("ModelHelper::fromClass()")]),e._v(" or from an model's file "),a("code",[e._v("ModelHelper::fromFile()")]),e._v(".")]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[e._v('Model Helper is "macroable" and "collectable", which allows you to run batch methods and collect output with '),a("code",[e._v("ModelHelper::fromClass('App\\User')->collect('name', 'namespace')")])])]),e._v(" "),a("h2",{attrs:{id:"construct-from-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#construct-from-file","aria-hidden":"true"}},[e._v("#")]),e._v(" Construct from File")]),e._v(" "),a("helper-method",{attrs:{method:"fromFile"}},[a("pre",[a("code",[e._v("/**\n * Load a model from file\n * @param string $path\n * @return Model\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"construct-from-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#construct-from-class","aria-hidden":"true"}},[e._v("#")]),e._v(" Construct from Class")]),e._v(" "),a("helper-method",{attrs:{method:"fromClass"}},[a("pre",[a("code",[e._v("/**\n * Load a model from class\n * @param string $class\n * @return Model\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"reflection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reflection","aria-hidden":"true"}},[e._v("#")]),e._v(" Reflection")]),e._v(" "),a("helper-method",{attrs:{method:"reflection"}},[a("pre",[a("code",[e._v("/**\n * Get class reflection\n * @return ReflectionClass\n * @throws \\ReflectionException\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"parent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parent","aria-hidden":"true"}},[e._v("#")]),e._v(" Parent")]),e._v(" "),a("helper-method",{attrs:{method:"parent"}},[a("pre",[a("code",[e._v("/**\n * Get immediate parent of a model class\n * Note that this might not be useful as user can extend from custom 'model' class not Laravel one.\n * @return string\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class","aria-hidden":"true"}},[e._v("#")]),e._v(" Class")]),e._v(" "),a("helper-method",{attrs:{method:"class"}},[a("pre",[a("code",[e._v("/**\n * Get model's class (namespace + name)\n * @return string\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#name","aria-hidden":"true"}},[e._v("#")]),e._v(" Name")]),e._v(" "),a("helper-method",{attrs:{method:"name"}},[a("pre",[a("code",[e._v("/**\n * Get model's name without namespace\n * @return string\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"namespace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#namespace","aria-hidden":"true"}},[e._v("#")]),e._v(" Namespace")]),e._v(" "),a("helper-method",{attrs:{method:"namespace"}},[a("pre",[a("code",[e._v("/**\n * Get models's namespace\n * @return string\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"instance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instance","aria-hidden":"true"}},[e._v("#")]),e._v(" Instance")]),e._v(" "),a("helper-method",{attrs:{method:"instance"}},[a("pre",[a("code",[e._v("/**\n * Initiate a new instance of a model\n * @return Eloquent\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"primary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#primary","aria-hidden":"true"}},[e._v("#")]),e._v(" Primary")]),e._v(" "),a("helper-method",{attrs:{method:"primary"}},[a("pre",[a("code",[e._v("/**\n * Get primary key for a model\n * @return string\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table","aria-hidden":"true"}},[e._v("#")]),e._v(" Table")]),e._v(" "),a("helper-method",{attrs:{method:"table"}},[a("pre",[a("code",[e._v("/**\n * Get model's table\n * @return string\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"hidden"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hidden","aria-hidden":"true"}},[e._v("#")]),e._v(" Hidden")]),e._v(" "),a("helper-method",{attrs:{method:"hidden"}},[a("pre",[a("code",[e._v("/**\n * Get hidden attributes\n * @return Collection\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"fillable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fillable","aria-hidden":"true"}},[e._v("#")]),e._v(" Fillable")]),e._v(" "),a("helper-method",{attrs:{method:"fillable"}},[a("pre",[a("code",[e._v("/**\n * Get fillable attributes\n * @return Collection\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request","aria-hidden":"true"}},[e._v("#")]),e._v(" Request")]),e._v(" "),a("helper-method",{attrs:{method:"fillable"}},[a("pre",[a("code",[e._v("/**\n * Get FormRequest for this model if one exists\n * @return null|FormRequest\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"attributes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attributes","aria-hidden":"true"}},[e._v("#")]),e._v(" Attributes")]),e._v(" "),a("helper-method",{attrs:{method:"attributes"}},[a("pre",[a("code",[e._v("/**\n * Get model's attributes\n * @return Collection\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rules","aria-hidden":"true"}},[e._v("#")]),e._v(" Rules")]),e._v(" "),a("helper-method",{attrs:{method:"rules"}},[a("pre",[a("code",[e._v("/**\n * Build validation rules\n * @param bool $fillableOnly: true\n * @param bool $deepAnalysis: false\n * @return Collection\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"relationships"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#relationships","aria-hidden":"true"}},[e._v("#")]),e._v(" Relationships")]),e._v(" "),a("helper-method",{attrs:{method:"relationships"}},[a("pre",[a("code",[e._v("/**\n * Get model's relationships\n * @return Collection\n */\n")])])]),e._v(" "),a("h2",{attrs:{id:"fields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fields","aria-hidden":"true"}},[e._v("#")]),e._v(" Fields")]),e._v(" "),a("helper-method",{attrs:{method:"fields"}},[a("pre",[a("code",[e._v("/**\n * Get attribute and relationship fields (either native HTML or Vue extended)\n * This method basically maps attribute type to corresponding field/input type.\n * @param bool $fillable: default false\n * @param bool $extended: default false\n * @return Collection\n */\n")])])])],1)},[],!1,null,null,null);t.default=s.exports}}]);